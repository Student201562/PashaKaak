#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SemesterSportsСlub
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sport Club")]
	public partial class LinqSqlSportClubDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertTrainers(Trainers instance);
    partial void UpdateTrainers(Trainers instance);
    partial void DeleteTrainers(Trainers instance);
    partial void InsertMethods(Methods instance);
    partial void UpdateMethods(Methods instance);
    partial void DeleteMethods(Methods instance);
    partial void InsertServices(Services instance);
    partial void UpdateServices(Services instance);
    partial void DeleteServices(Services instance);
    partial void InsertDiscounts(Discounts instance);
    partial void UpdateDiscounts(Discounts instance);
    partial void DeleteDiscounts(Discounts instance);
    partial void InsertAuthorization(Authorization instance);
    partial void UpdateAuthorization(Authorization instance);
    partial void DeleteAuthorization(Authorization instance);
    #endregion
		
		public LinqSqlSportClubDataContext() : 
				base(global::SemesterSportsСlub.Properties.Settings.Default.Sport_ClubConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSqlSportClubDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSqlSportClubDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSqlSportClubDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSqlSportClubDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Trainers> Trainers
		{
			get
			{
				return this.GetTable<Trainers>();
			}
		}
		
		public System.Data.Linq.Table<Methods> Methods
		{
			get
			{
				return this.GetTable<Methods>();
			}
		}
		
		public System.Data.Linq.Table<Services> Services
		{
			get
			{
				return this.GetTable<Services>();
			}
		}
		
		public System.Data.Linq.Table<Discounts> Discounts
		{
			get
			{
				return this.GetTable<Discounts>();
			}
		}
		
		public System.Data.Linq.Table<Authorization> Authorization
		{
			get
			{
				return this.GetTable<Authorization>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trainers")]
	public partial class Trainers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_trainer;
		
		private string _last_name;
		
		private string _first_name;
		
		private string _second_name;
		
		private string _discription_of_trainer;
		
		private string _photo_trainer;
		
		private System.Nullable<int> _count_of_client;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_trainerChanging(int value);
    partial void Onid_trainerChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onsecond_nameChanging(string value);
    partial void Onsecond_nameChanged();
    partial void Ondiscription_of_trainerChanging(string value);
    partial void Ondiscription_of_trainerChanged();
    partial void Onphoto_trainerChanging(string value);
    partial void Onphoto_trainerChanged();
    partial void Oncount_of_clientChanging(System.Nullable<int> value);
    partial void Oncount_of_clientChanged();
    #endregion
		
		public Trainers()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_trainer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_trainer
		{
			get
			{
				return this._id_trainer;
			}
			set
			{
				if ((this._id_trainer != value))
				{
					this.Onid_trainerChanging(value);
					this.SendPropertyChanging();
					this._id_trainer = value;
					this.SendPropertyChanged("id_trainer");
					this.Onid_trainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_second_name", DbType="NVarChar(50)")]
		public string second_name
		{
			get
			{
				return this._second_name;
			}
			set
			{
				if ((this._second_name != value))
				{
					this.Onsecond_nameChanging(value);
					this.SendPropertyChanging();
					this._second_name = value;
					this.SendPropertyChanged("second_name");
					this.Onsecond_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discription_of_trainer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string discription_of_trainer
		{
			get
			{
				return this._discription_of_trainer;
			}
			set
			{
				if ((this._discription_of_trainer != value))
				{
					this.Ondiscription_of_trainerChanging(value);
					this.SendPropertyChanging();
					this._discription_of_trainer = value;
					this.SendPropertyChanged("discription_of_trainer");
					this.Ondiscription_of_trainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo_trainer", DbType="NVarChar(MAX)")]
		public string photo_trainer
		{
			get
			{
				return this._photo_trainer;
			}
			set
			{
				if ((this._photo_trainer != value))
				{
					this.Onphoto_trainerChanging(value);
					this.SendPropertyChanging();
					this._photo_trainer = value;
					this.SendPropertyChanged("photo_trainer");
					this.Onphoto_trainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_of_client", DbType="Int")]
		public System.Nullable<int> count_of_client
		{
			get
			{
				return this._count_of_client;
			}
			set
			{
				if ((this._count_of_client != value))
				{
					this.Oncount_of_clientChanging(value);
					this.SendPropertyChanging();
					this._count_of_client = value;
					this.SendPropertyChanged("count_of_client");
					this.Oncount_of_clientChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Methods")]
	public partial class Methods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NameMethod;
		
		private string _DescriptionOfProcedure;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameMethodChanging(string value);
    partial void OnNameMethodChanged();
    partial void OnDescriptionOfProcedureChanging(string value);
    partial void OnDescriptionOfProcedureChanged();
    #endregion
		
		public Methods()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMethod", DbType="NVarChar(50)")]
		public string NameMethod
		{
			get
			{
				return this._NameMethod;
			}
			set
			{
				if ((this._NameMethod != value))
				{
					this.OnNameMethodChanging(value);
					this.SendPropertyChanging();
					this._NameMethod = value;
					this.SendPropertyChanged("NameMethod");
					this.OnNameMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionOfProcedure", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionOfProcedure
		{
			get
			{
				return this._DescriptionOfProcedure;
			}
			set
			{
				if ((this._DescriptionOfProcedure != value))
				{
					this.OnDescriptionOfProcedureChanging(value);
					this.SendPropertyChanging();
					this._DescriptionOfProcedure = value;
					this.SendPropertyChanged("DescriptionOfProcedure");
					this.OnDescriptionOfProcedureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Services")]
	public partial class Services : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_service;
		
		private string _NameService;
		
		private System.Nullable<double> _PriceOfService;
		
		private string _DiscriptionOfService;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_serviceChanging(int value);
    partial void Onid_serviceChanged();
    partial void OnNameServiceChanging(string value);
    partial void OnNameServiceChanged();
    partial void OnPriceOfServiceChanging(System.Nullable<double> value);
    partial void OnPriceOfServiceChanged();
    partial void OnDiscriptionOfServiceChanging(string value);
    partial void OnDiscriptionOfServiceChanged();
    #endregion
		
		public Services()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_service", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_service
		{
			get
			{
				return this._id_service;
			}
			set
			{
				if ((this._id_service != value))
				{
					this.Onid_serviceChanging(value);
					this.SendPropertyChanging();
					this._id_service = value;
					this.SendPropertyChanged("id_service");
					this.Onid_serviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameService", DbType="NVarChar(50)")]
		public string NameService
		{
			get
			{
				return this._NameService;
			}
			set
			{
				if ((this._NameService != value))
				{
					this.OnNameServiceChanging(value);
					this.SendPropertyChanging();
					this._NameService = value;
					this.SendPropertyChanged("NameService");
					this.OnNameServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfService", DbType="Float")]
		public System.Nullable<double> PriceOfService
		{
			get
			{
				return this._PriceOfService;
			}
			set
			{
				if ((this._PriceOfService != value))
				{
					this.OnPriceOfServiceChanging(value);
					this.SendPropertyChanging();
					this._PriceOfService = value;
					this.SendPropertyChanged("PriceOfService");
					this.OnPriceOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscriptionOfService", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DiscriptionOfService
		{
			get
			{
				return this._DiscriptionOfService;
			}
			set
			{
				if ((this._DiscriptionOfService != value))
				{
					this.OnDiscriptionOfServiceChanging(value);
					this.SendPropertyChanging();
					this._DiscriptionOfService = value;
					this.SendPropertyChanged("DiscriptionOfService");
					this.OnDiscriptionOfServiceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discounts")]
	public partial class Discounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NameDiscount;
		
		private System.Nullable<int> _DiscountInpercent;
		
		private System.Nullable<System.DateTime> _Period;
		
		private string _DiscriptionOfDiscount;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameDiscountChanging(string value);
    partial void OnNameDiscountChanged();
    partial void OnDiscountInpercentChanging(System.Nullable<int> value);
    partial void OnDiscountInpercentChanged();
    partial void OnPeriodChanging(System.Nullable<System.DateTime> value);
    partial void OnPeriodChanged();
    partial void OnDiscriptionOfDiscountChanging(string value);
    partial void OnDiscriptionOfDiscountChanged();
    #endregion
		
		public Discounts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameDiscount", DbType="NVarChar(50)")]
		public string NameDiscount
		{
			get
			{
				return this._NameDiscount;
			}
			set
			{
				if ((this._NameDiscount != value))
				{
					this.OnNameDiscountChanging(value);
					this.SendPropertyChanging();
					this._NameDiscount = value;
					this.SendPropertyChanged("NameDiscount");
					this.OnNameDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInpercent", DbType="Int")]
		public System.Nullable<int> DiscountInpercent
		{
			get
			{
				return this._DiscountInpercent;
			}
			set
			{
				if ((this._DiscountInpercent != value))
				{
					this.OnDiscountInpercentChanging(value);
					this.SendPropertyChanging();
					this._DiscountInpercent = value;
					this.SendPropertyChanged("DiscountInpercent");
					this.OnDiscountInpercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Date")]
		public System.Nullable<System.DateTime> Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscriptionOfDiscount", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DiscriptionOfDiscount
		{
			get
			{
				return this._DiscriptionOfDiscount;
			}
			set
			{
				if ((this._DiscriptionOfDiscount != value))
				{
					this.OnDiscriptionOfDiscountChanging(value);
					this.SendPropertyChanging();
					this._DiscriptionOfDiscount = value;
					this.SendPropertyChanged("DiscriptionOfDiscount");
					this.OnDiscriptionOfDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Authorization]")]
	public partial class Authorization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Password;
		
		private string _TypeUser;
		
		private string _first_name;
		
		private string _second_name;
		
		private string _last_name;
		
		private System.Nullable<System.DateTime> _date_of_burn;
		
		private System.Nullable<int> _id_tainer;
		
		private int _id_user;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeUserChanging(string value);
    partial void OnTypeUserChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onsecond_nameChanging(string value);
    partial void Onsecond_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Ondate_of_burnChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_burnChanged();
    partial void Onid_tainerChanging(System.Nullable<int> value);
    partial void Onid_tainerChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    #endregion
		
		public Authorization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeUser", DbType="NVarChar(50)")]
		public string TypeUser
		{
			get
			{
				return this._TypeUser;
			}
			set
			{
				if ((this._TypeUser != value))
				{
					this.OnTypeUserChanging(value);
					this.SendPropertyChanging();
					this._TypeUser = value;
					this.SendPropertyChanged("TypeUser");
					this.OnTypeUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_second_name", DbType="NVarChar(50)")]
		public string second_name
		{
			get
			{
				return this._second_name;
			}
			set
			{
				if ((this._second_name != value))
				{
					this.Onsecond_nameChanging(value);
					this.SendPropertyChanging();
					this._second_name = value;
					this.SendPropertyChanged("second_name");
					this.Onsecond_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_burn", DbType="Date")]
		public System.Nullable<System.DateTime> date_of_burn
		{
			get
			{
				return this._date_of_burn;
			}
			set
			{
				if ((this._date_of_burn != value))
				{
					this.Ondate_of_burnChanging(value);
					this.SendPropertyChanging();
					this._date_of_burn = value;
					this.SendPropertyChanged("date_of_burn");
					this.Ondate_of_burnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tainer", DbType="Int")]
		public System.Nullable<int> id_tainer
		{
			get
			{
				return this._id_tainer;
			}
			set
			{
				if ((this._id_tainer != value))
				{
					this.Onid_tainerChanging(value);
					this.SendPropertyChanging();
					this._id_tainer = value;
					this.SendPropertyChanged("id_tainer");
					this.Onid_tainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
